generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  agent_id         Int                @id @default(autoincrement())
  agent_name       String             @db.VarChar(50)
  agent_email      String             @unique(map: "agent_email") @db.VarChar(80)
  agent_password   String             @db.VarChar(60)
  agent_uname      String             @unique(map: "agent_uname") @db.VarChar(30)
  agent_extra      Json
  agent_created_at Int
  AgentCatMap      AgentCatMap[]
  AgentSkillSetMap AgentSkillSetMap[]
  AgentStatus      AgentStatus?
  ChatAgentMap     ChatAgentMap[]

  @@index([agent_created_at], map: "fields: [agent_created_at]")
  @@index([agent_name], map: "agent_name")
  @@index([agent_password], map: "agent_password")
}

model AgentCat {
  agent_cat_id     Int                     @id @default(autoincrement())
  agent_cat_name   String                  @unique(map: "agent_cat_name") @db.VarChar(40)
  agent_cat_type   AgentCat_agent_cat_type
  agent_created_at BigInt
  AgentCatMap      AgentCatMap[]
  AgentChatQue     AgentChatQue[]

  @@index([agent_cat_type], map: "agent_cat_type")
  @@index([agent_created_at], map: "agent_created_at")
}

model AgentCatMap {
  agent_cat_map_id           Int      @id @default(autoincrement())
  agent_cat_map_agent_id     Int
  agent_cat_map_agent_cat_id Int
  AgentCat                   AgentCat @relation(fields: [agent_cat_map_agent_cat_id], references: [agent_cat_id], onDelete: Cascade, map: "AgentCatMap_ibfk_2")
  Agent                      Agent    @relation(fields: [agent_cat_map_agent_id], references: [agent_id], onDelete: Cascade, map: "AgentCatMap_ibfk_1")

  @@unique([agent_cat_map_agent_id, agent_cat_map_agent_cat_id], map: "agent_cat_map_agent_id")
  @@index([agent_cat_map_agent_cat_id], map: "agent_cat_map_agent_cat_id")
}

model AgentSkillSetMap {
  ass_id                 Int      @id @default(autoincrement())
  ass_agent_id           Int
  ass_agent_skill_set_id Int
  Agent                  Agent    @relation(fields: [ass_agent_id], references: [agent_id], onDelete: Cascade, map: "AgentSkillSetMap_ibfk_1")
  SkillSet               SkillSet @relation(fields: [ass_agent_skill_set_id], references: [skill_id], onDelete: Cascade, map: "AgentSkillSetMap_ibfk_2")

  @@index([ass_agent_id], map: "ass_agent_id")
  @@index([ass_agent_skill_set_id], map: "ass_agent_skill_set_id")
}

model AgentStatus {
  agent_status_id        Int   @id
  agent_availability     Int
  agent_capacity         Int
  agent_current_capacity Int
  agent_last_active_on   Int
  Agent                  Agent @relation(fields: [agent_status_id], references: [agent_id], onDelete: Cascade, map: "AgentStatus_ibfk_1")

  @@index([agent_availability], map: "agent_availability")
  @@index([agent_capacity], map: "agent_capacity")
  @@index([agent_current_capacity], map: "agent_current_capacity")
}

model ChatAgentMap {
  cam_id              Int          @id @default(autoincrement())
  cam_agent_id        Int
  cam_chat_session_id String       @db.VarChar(40)
  cam_chat_status     Int
  cam_last_message    String       @db.Text
  cam_edited_on       Int
  Agent               Agent        @relation(fields: [cam_agent_id], references: [agent_id], onDelete: Cascade, map: "ChatAgentMap_ibfk_1")
  ChatSessions        ChatSessions @relation(fields: [cam_chat_session_id], references: [chat_session_uniq_id], onDelete: Cascade, map: "ChatAgentMap_ibfk_2")

  @@unique([cam_agent_id, cam_chat_session_id], map: "cam_agent_id")
  @@index([cam_chat_session_id], map: "cam_chat_session_id")
  @@index([cam_chat_status], map: "cam_chat_status")
  @@index([cam_edited_on], map: "cam_edited_on")
}

model ChatMessageHistory {
  chm_id              Int                         @id @default(autoincrement())
  chm_chat_session_id String                      @db.VarChar(40)
  chm_uniq_id         String                      @unique(map: "chm_uniq_id") @db.VarChar(40)
  chm_from            String                      @db.VarChar(50)
  chm_message         String                      @db.Text
  chm_type            ChatMessageHistory_chm_type
  chm_extra           Json
  cha_created_at      Int
  ChatSessions        ChatSessions                @relation(fields: [chm_chat_session_id], references: [chat_session_uniq_id], onDelete: Cascade, map: "ChatMessageHistory_ibfk_1")

  @@index([cha_created_at], map: "cha_created_at")
  @@index([chm_chat_session_id], map: "chm_chat_session_id")
  @@index([chm_from], map: "chm_from")
  @@index([chm_type], map: "chm_type")
}

model ChatSessions {
  chat_session_id      Int                  @id @default(autoincrement())
  chat_session_uniq_id String               @unique(map: "chat_session_uniq_id") @db.VarChar(40)
  chat_session_status  Int
  chat_session_extra   Json
  AgentChatQue         AgentChatQue?
  ChatAgentMap         ChatAgentMap[]
  ChatMessageHistory   ChatMessageHistory[]
  UserChatSessionMap   UserChatSessionMap[]

  @@index([chat_session_status], map: "chat_session_status")
}

model SkillSet {
  skill_id         Int                 @id @default(autoincrement())
  skill_name       String              @unique(map: "skill_name") @db.VarChar(30)
  skill_type       SkillSet_skill_type @default(A)
  AgentChatQue     AgentChatQue[]
  AgentSkillSetMap AgentSkillSetMap[]

  @@index([skill_type], map: "skill_type")
}

model UserChatSessionMap {
  ucsm_id         String        @unique(map: "ucsm_id") @db.VarChar(40)
  ucsm_session_id Int?
  ChatSessions    ChatSessions? @relation(fields: [ucsm_session_id], references: [chat_session_id], map: "UserChatSessionMap_ibfk_1")

  @@index([ucsm_session_id], map: "UserChatSessionMap_ibfk_1")
}

model AgentChatQue {
  que_id                          Int          @id @default(autoincrement())
  ChatSession_id                  String       @unique(map: "ChatSession_id") @db.VarChar(40)
  AgentCat                        Int?
  AgentSkill                      Int?
  created_at                      Int?
  AgentCat_AgentCatToAgentChatQue AgentCat?    @relation(fields: [AgentCat], references: [agent_cat_id], onDelete: Cascade, map: "AgentChatQue_ibfk_2")
  SkillSet                        SkillSet?    @relation(fields: [AgentSkill], references: [skill_id], onDelete: Cascade, map: "AgentChatQue_ibfk_3")
  ChatSessions                    ChatSessions @relation(fields: [ChatSession_id], references: [chat_session_uniq_id], onDelete: Cascade, map: "AgentChatQue_ibfk_1")

  @@index([AgentCat], map: "AgentCat")
  @@index([AgentSkill], map: "AgentChatQue_ibfk_3")
}

enum AgentCat_agent_cat_type {
  P
  Q
  R
  S
}

enum ChatMessageHistory_chm_type {
  U
  A
  B
  N
}

enum SkillSet_skill_type {
  A
  B
  C
}
